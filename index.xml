<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My Documentation</title>
    <link>https://wiki.cyd4r.com/</link>
    <description>Recent content on My Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Dec 2021 19:56:14 +0100</lastBuildDate><atom:link href="https://wiki.cyd4r.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Scp</title>
      <link>https://wiki.cyd4r.com/comandos/scp/</link>
      <pubDate>Wed, 08 Dec 2021 19:56:14 +0100</pubDate>
      
      <guid>https://wiki.cyd4r.com/comandos/scp/</guid>
      <description>Todos utilizamos de forma asidua el comando scp (Secure Copy) en Linux y Unix para transferir archivos entre hosts a través del protocolo SSH. Normalmente nos ceñimos a su utilización básica pero viene bien conocer algunos trucos o usos poco habituales del comando (para algunos) para mejorar u optimizar su utilización. Ahí van unos cuantos ejemplos que espero os sean de utilidad.
Uso básico de SCP Comencemos por lo básico, transferencia de un archivo entre el host local y un host remoto o viceversa y entre hosts remotos.</description>
    </item>
    
    <item>
      <title>Better Bash Scripting</title>
      <link>https://wiki.cyd4r.com/scripts/better_bash_scripting/</link>
      <pubDate>Wed, 08 Dec 2021 19:31:12 +0100</pubDate>
      
      <guid>https://wiki.cyd4r.com/scripts/better_bash_scripting/</guid>
      <description>Secuencias de comandos más Empiezo cada script de bash con el siguiente prólogo:
#!/bin/bash set -o nounset set -o errexit Esto se encargará de dos errores muy comunes:
 Hacer referencia a variables indefinidas (cuyo valor predeterminado es &amp;ldquo;&amp;rdquo;) Ignorar los comandos fallidos  Las dos configuraciones también tienen abreviaturas (“-u” y “-e”) pero las versiones más largas son más legibles. Si se tolera un comando fallido, use este modismo:</description>
    </item>
    
    <item>
      <title>Monitorizar Red Bash</title>
      <link>https://wiki.cyd4r.com/scripts/monitorizar-red-bash/</link>
      <pubDate>Wed, 08 Dec 2021 19:21:31 +0100</pubDate>
      
      <guid>https://wiki.cyd4r.com/scripts/monitorizar-red-bash/</guid>
      <description>#!/bin/bash LOG=/tmp/mylog.log SECONDS=3600 EMAIL=mi@email for i in $@ ;do echo &amp;#34;$i-UP!&amp;#34; &amp;gt; $LOG.$i done while true; do  for i in $@; do  ping -c 1 $i &amp;gt; /dev/null  if [ $? -ne 0 ]; then  STATUS=$(cat $LOG.$i) if [ $STATUS != &amp;#34;$i-DOWN!&amp;#34; ]; then  echo &amp;#34;`date`: ping failed, $ihost is down!&amp;#34; | mail -s &amp;#34;$ihost is down!&amp;#34; $EMAIL fi else STATUS=$(cat $LOG.$i) if [ $STATUS !</description>
    </item>
    
    <item>
      <title>OpenSSL</title>
      <link>https://wiki.cyd4r.com/comandos/openssl/</link>
      <pubDate>Wed, 08 Dec 2021 19:07:38 +0100</pubDate>
      
      <guid>https://wiki.cyd4r.com/comandos/openssl/</guid>
      <description>Lorem Ipsum.</description>
    </item>
    
    <item>
      <title>Uso del comando sed con ejemplos</title>
      <link>https://wiki.cyd4r.com/comandos/sed/</link>
      <pubDate>Wed, 08 Dec 2021 18:43:57 +0100</pubDate>
      
      <guid>https://wiki.cyd4r.com/comandos/sed/</guid>
      <description>El comando SED es un editor de secuencias capaz de realizar funciones en archivos como, buscar, reemplazar, insertar y eliminar. Puedes editar archivos sin tener que abrirlos, por tanto no es necesario abrir un editor y modicar la cadena, la operación se automatiza.
También se admiten expresiones regulares que permiten comparar patrones complejos, aunque el uso más común del comando es para buscar y reemplazar o sustituir cadenas. En este articulo aprenderemos como usar el comando, y aportaremos algunos ejemplos útiles.</description>
    </item>
    
    <item>
      <title>Wireguard</title>
      <link>https://wiki.cyd4r.com/vpn/wireguard/</link>
      <pubDate>Wed, 08 Dec 2021 18:23:06 +0100</pubDate>
      
      <guid>https://wiki.cyd4r.com/vpn/wireguard/</guid>
      <description>Indice de contenido 1 Instalar y congurar WireGuard VPN en Ubuntu 1.1 Instalar WireGuard en Ubuntu 1.2 Congurar WireGuard 1.3 Congurar el cortafuegos 1.4 Iniciar WireGuard 1.5 Instalar WireGuard cliente 1.6 Conectar el cliente con el servidor  1. Instalar y congurar WireGuard La instalación de WireGuard en Ubuntu y derivados es bastante simple. Tan solo debemos agregar el repositorio e instalar la herramienta.
sudo add-apt-repository ppa:wireguard/wireguard sudo apt install wireguard 2.</description>
    </item>
    
    <item>
      <title>Ssh Agent Macos</title>
      <link>https://wiki.cyd4r.com/ssh/ssh-agent-macos/</link>
      <pubDate>Wed, 08 Dec 2021 18:12:12 +0100</pubDate>
      
      <guid>https://wiki.cyd4r.com/ssh/ssh-agent-macos/</guid>
      <description>¿Como añadir el ssh Agent a mac?  Para añadir nuestra llave ssh al user-agent de nuestra terminal debemos de realizar los siguientes pasos.    Lo primero es generar una llave ssh (si no tenemos)
ssh-keygen -t rsa -f (nombre que queramos que tenga) Podemos omitir la parte desde el -f
  Es necesario que hagamos la siguiente configuración en el fichero que se encuentra en la siguiente ruta ~/.</description>
    </item>
    
    <item>
      <title>Basics Docker</title>
      <link>https://wiki.cyd4r.com/docker/basics-docker/</link>
      <pubDate>Wed, 08 Dec 2021 18:11:34 +0100</pubDate>
      
      <guid>https://wiki.cyd4r.com/docker/basics-docker/</guid>
      <description>Lorem Ipsum.</description>
    </item>
    
    <item>
      <title>Comandos</title>
      <link>https://wiki.cyd4r.com/git/comandos/</link>
      <pubDate>Mon, 01 Nov 2021 21:10:12 +0100</pubDate>
      
      <guid>https://wiki.cyd4r.com/git/comandos/</guid>
      <description>¿ Qué es GIT? Git es un conocido sistema de control de versiones distribuido de código abierto.
Fue creado para manejar desde pequeños proyectos, hasta grandes proyectos empresariales, pero con algo en común… siempre con la misma rapidez y eficacia.
Comandos GIT imprescindibles git config
Aplicar una configuración especifica al usuario, algoritmo, nombre, email, etc…
ejemplo
git config --global user.email nombre@domain.com
git init
Crear / generar un repositorio nuevo.
git init</description>
    </item>
    
    <item>
      <title>Tips para Docker</title>
      <link>https://wiki.cyd4r.com/docker/tips/</link>
      <pubDate>Mon, 01 Nov 2021 21:08:40 +0100</pubDate>
      
      <guid>https://wiki.cyd4r.com/docker/tips/</guid>
      <description>1.- Docker stats este comando nos permite ver las estadisticas por contenedor
2.- docker system prune Este comando borra todo lo que no estemos usando (networks imagenes contenedores&amp;hellip;)
3 docker inspect +containerid
4 docker cp containerid:/tmp
5 docker-compose restart always on-failure:10
6 docker logs &amp;ndash;tail=10 -t containerid
7 docker run &amp;ndash;it &amp;ndash;entrypoint=bash imagen.</description>
    </item>
    
    <item>
      <title>Tipos de Registros</title>
      <link>https://wiki.cyd4r.com/dns/tiposdns/</link>
      <pubDate>Mon, 01 Nov 2021 21:06:50 +0100</pubDate>
      
      <guid>https://wiki.cyd4r.com/dns/tiposdns/</guid>
      <description>Registros DNS Cuando buscamos una web por internet, ésta se carga gracias a unas direcciones IP que localizan los dispositivos que contienen dicha página. Hoy en día, casi nos cuesta recordar el número de nuestro teléfono móvil, así que recordar esta serie de números separados por puntos no es muy práctico, así que los servidores utilizan nombres de dominios que resultan más sencillos de recordar. Para traducir estos nombres de dominios en direcciones IP, están las DNS.</description>
    </item>
    
  </channel>
</rss>
